# -*- coding: utf-8 -*-
"""0318daily.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HvHbARS2P_aQGzEAFGjdc7BQF0ja4p6P
"""

import pandas as pd
df = pd.read_csv('modified_sales_data.csv')

# 결측값이 포함된 행 찾기
null_rows = df[df.isnull().any(axis=1)]
print("결측값이 포함된 행:")
print(null_rows)

# 각 열별 null값 존재여부
print("\n각 열별 NaN 값 존재 여부:")
nan_status = []
for col in df.columns:
    if df[col].isnull().any():
        nan_status.append(f"✔")
    else:
        nan_status.append(f"✘")

nan_df = pd.DataFrame({'열': df.columns, 'NaN 값 존재 여부': nan_status})
print(nan_df)

# 숫자형 열 결측값 처리
df['sales_amount'] = df['sales_amount'].fillna(df['sales_amount'].mean()) #mean 평균
df['discount_applied'] = df['discount_applied'].fillna(df['discount_applied'].median()) #median 중앙값

# 문자열 열 결측값 처리
df['payment_method'] = df['payment_method'].fillna(df['payment_method'].mode()[0]) # mode 자주 등장하는 숫자

# 날짜 열 결측값 처리
df['order_date'] = df['order_date'].fillna(df['order_date'].max()) # max 가장최근날짜

# sales_amount 열의 평균과 표준편차 계산
sales_amount_mean = df['sales_amount'].mean()
sales_amount_std = df['sales_amount'].std()

print(f"\nsales_amount 열의 평균: {sales_amount_mean:.2f}")
print(f"sales_amount 열의 표준편차: {sales_amount_std:.2f}")

