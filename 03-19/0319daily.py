# -*- coding: utf-8 -*-
"""0319daily.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cy3jTRVE-2q74KzvetHN940U9IasNAgU
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.font_manager as fm

# 데이터 로드 및 기본 탐색
df = pd.read_csv('fitness_user_data.csv')

# 기본 정보 확인
print(df.info())
print("\n처음 5개 행: ")
print(df.head())
print("\n결측값 현황: ")
print(df.isnull().sum())

# 데이터프레임 복사
df = df.copy()

# 1 결측값 처리
df.loc[:, 'exercise_time'] = df['exercise_time'].fillna(df['exercise_time'].mean())
df.loc[:, 'calories_burned'] = df['calories_burned'].fillna(0)
df.loc[:, 'weight'] = df['weight'].fillna(df['weight'].mode()[0])

# 2 이상치 처리
exercise_time_rep = df['exercise_time'].quantile(0.90)
calories_burned_rep = df['calories_burned'].quantile(0.75)

df.loc[df['exercise_time'] > 180, 'exercise_time'] = exercise_time_rep
df.loc[df['calories_burned'] > 1500, 'calories_burned'] = calories_burned_rep

# 3 날짜 처리
df['exercise_date'] = pd.to_datetime(df['exercise_date'])
df['exercise_day_of_week'] = df['exercise_date'].dt.day_name()

# 요일 열 추가 확인
print("\n요일 열 추가 후 데이터:")
print(df.head())

# 요일 고유값 확인
print("\n요일 고유값:")
print(df['exercise_day_of_week'].unique())

# 폰트 설정 (경고 방지)
plt.rcParams['font.family'] = 'DejaVu Sans'
plt.rcParams['axes.unicode_minus'] = False

# 시각화
plt.figure(figsize=(15, 5))

# 1 운동시간 - 소모 칼로리
plt.subplot(131)
plt.scatter(df['exercise_time'], df['calories_burned'], alpha=0.7)
plt.title('Exercise Time vs Calories Burned')
plt.xlabel('Exercise Time (min)')
plt.ylabel('Calories Burned')

# 2 운동 유형 - 소모 칼로리

plt.subplot(132)
exercise_type_map = {type: idx for idx, type in enumerate(df['exercise_type'].unique())}
df['exercise_type_encoded'] = df['exercise_type'].map(exercise_type_map) #운동유형을 숫자로 인코딩 해줘야함

plt.scatter(df['exercise_type_encoded'], df['calories_burned'], alpha=0.7)
plt.title('Exercise Type vs Calories Burned')
plt.xlabel('Exercise Type')
plt.ylabel('Calories Burned')
plt.xticks(list(exercise_type_map.values()), list(exercise_type_map.keys()), rotation=45)

# 3 운동 시간 - 몸무게
plt.subplot(133)
sns.scatterplot(x='exercise_time', y='weight', data=df)
plt.title('Exercise Time vs Weight')
plt.xlabel('Exercise Time (min)')
plt.ylabel('Weight (kg)')

plt.tight_layout()
plt.show()